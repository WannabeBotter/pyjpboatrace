name: On Release to PyPI

on:
  release:
    types: [published]

jobs:
  test:
    uses: ./.github/workflows/pytest-workflow-call.yaml
    with:
      git-ref: ${{ github.ref }}
  static-type-check:
    uses: ./.github/workflows/static-type-check-workflow-call.yaml
    with:
      git-ref: ${{ github.ref }}
  code-style-check:
    uses: ./.github/workflows/code-style-check-workflow-call.yaml
    with:
      git-ref: ${{ github.ref }}
  validate-version:
    uses: ./.github/workflows/validate-version-workflow-call.yaml
    with:
      git-ref: ${{ github.ref }}
  build:
    needs: [test, static-type-check, code-style-check, validate-version]
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -U uv
      - name: Build a binary wheel and a source tarball
        run: |
          uv build
      - name: Store the distribution files as artifacts
        uses: actions/upload-artifact@v4
        with:
          name: python-package-distributions
          path: dist/
  publish-to-pypi:
    needs: [build]
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/pyjpboatrace
    permissions:
      id-token: write
    steps:
      - name: Download the distribution files
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/
      - name: Publish distribution to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
  publish-to-github:
    needs: [build]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Download the distribution files
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/
      - name: Upload distribution files to GitHub
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release upload "$GITHUB_REF_NAME" dist/* --repo "$GITHUB_REPOSITORY" --clobber
